// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/tg123/sshpiper/plugin/kubernetes/apis/sshpiper/v1beta1"
	sshpiperv1beta1 "github.com/tg123/sshpiper/plugin/kubernetes/generated/clientset/versioned/typed/sshpiper/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakePipes implements PipeInterface
type fakePipes struct {
	*gentype.FakeClientWithList[*v1beta1.Pipe, *v1beta1.PipeList]
	Fake *FakeSshpiperV1beta1
}

func newFakePipes(fake *FakeSshpiperV1beta1, namespace string) sshpiperv1beta1.PipeInterface {
	return &fakePipes{
		gentype.NewFakeClientWithList[*v1beta1.Pipe, *v1beta1.PipeList](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("pipes"),
			v1beta1.SchemeGroupVersion.WithKind("Pipe"),
			func() *v1beta1.Pipe { return &v1beta1.Pipe{} },
			func() *v1beta1.PipeList { return &v1beta1.PipeList{} },
			func(dst, src *v1beta1.PipeList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.PipeList) []*v1beta1.Pipe { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta1.PipeList, items []*v1beta1.Pipe) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
