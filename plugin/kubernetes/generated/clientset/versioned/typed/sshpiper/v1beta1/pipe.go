// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	context "context"

	sshpiperv1beta1 "github.com/tg123/sshpiper/plugin/kubernetes/apis/sshpiper/v1beta1"
	scheme "github.com/tg123/sshpiper/plugin/kubernetes/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// PipesGetter has a method to return a PipeInterface.
// A group's client should implement this interface.
type PipesGetter interface {
	Pipes(namespace string) PipeInterface
}

// PipeInterface has methods to work with Pipe resources.
type PipeInterface interface {
	Create(ctx context.Context, pipe *sshpiperv1beta1.Pipe, opts v1.CreateOptions) (*sshpiperv1beta1.Pipe, error)
	Update(ctx context.Context, pipe *sshpiperv1beta1.Pipe, opts v1.UpdateOptions) (*sshpiperv1beta1.Pipe, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*sshpiperv1beta1.Pipe, error)
	List(ctx context.Context, opts v1.ListOptions) (*sshpiperv1beta1.PipeList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *sshpiperv1beta1.Pipe, err error)
	PipeExpansion
}

// pipes implements PipeInterface
type pipes struct {
	*gentype.ClientWithList[*sshpiperv1beta1.Pipe, *sshpiperv1beta1.PipeList]
}

// newPipes returns a Pipes
func newPipes(c *SshpiperV1beta1Client, namespace string) *pipes {
	return &pipes{
		gentype.NewClientWithList[*sshpiperv1beta1.Pipe, *sshpiperv1beta1.PipeList](
			"pipes",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *sshpiperv1beta1.Pipe { return &sshpiperv1beta1.Pipe{} },
			func() *sshpiperv1beta1.PipeList { return &sshpiperv1beta1.PipeList{} },
		),
	}
}
